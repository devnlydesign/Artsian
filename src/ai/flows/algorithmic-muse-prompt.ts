
// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview An AI tool that suggests visual or textual prompts based on the artist's creative history within the app.
 *
 * - generateMusePrompt - A function that generates a creative prompt for an artist and saves it.
 * - GenerateMusePromptInput - The input type for the generateMusePrompt function.
 * - GenerateMusePromptOutput - The return type for the generateMusePrompt function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';
import { saveMuseIdea } from '@/actions/museIdeasActions'; // Added import
import { auth } from '@/lib/firebase'; // Added import for auth to get current user

const GenerateMusePromptInputSchema = z.object({
  artistCreativeHistory: z
    .string()
    .describe(
      'A detailed history of the artist’s creative work within the app, including descriptions of past artworks, sketches, and projects.'
    ),
  currentMood: z
    .string()
    .describe('A description of the artist’s current mood or state of mind.'),
  desiredPromptType: z
    .enum(['visual', 'textual'])
    .describe('The desired type of prompt, either visual or textual.'),
});
export type GenerateMusePromptInput = z.infer<typeof GenerateMusePromptInputSchema>;

const GenerateMusePromptOutputSchema = z.object({
  prompt: z
    .string()
    .describe(
      'An AI-generated creative prompt, either visual or textual, tailored to the artist’s past work and current mood.'
    ),
});
export type GenerateMusePromptOutput = z.infer<typeof GenerateMusePromptOutputSchema>;

export async function generateMusePrompt(
  input: GenerateMusePromptInput
): Promise<GenerateMusePromptOutput> {
  const flowOutput = await generateMusePromptFlow(input);
  
  // Save the idea after generation
  const currentUser = auth.currentUser;
  if (currentUser && currentUser.uid && flowOutput) {
    await saveMuseIdea(currentUser.uid, input, flowOutput);
  } else if (!flowOutput) {
    console.warn("Muse prompt flow did not return output, not saving.");
  } else {
    console.warn("User not authenticated, generated muse idea will not be saved.");
  }
  
  return flowOutput;
}

const prompt = ai.definePrompt({
  name: 'generateMusePromptPrompt',
  input: {schema: GenerateMusePromptInputSchema},
  output: {schema: GenerateMusePromptOutputSchema},
  prompt: `You are a creative muse, assisting artists in overcoming creative blocks and discovering new ideas.

You will generate a {{desiredPromptType}} prompt based on the artist's creative history and current mood.

Artist's Creative History: {{{artistCreativeHistory}}}
Artist's Current Mood: {{{currentMood}}}

Desired Prompt Type: {{{desiredPromptType}}}

Here is the prompt:
`,
});

const generateMusePromptFlow = ai.defineFlow(
  {
    name: 'generateMusePromptFlow',
    inputSchema: GenerateMusePromptInputSchema,
    outputSchema: GenerateMusePromptOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
