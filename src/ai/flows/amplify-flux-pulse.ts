// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Implements the amplify flux pulse AI agent.
 *
 * - amplifyFluxPulse - A function that handles the amplify flux pulse process.
 * - AmplifyFluxPulseInput - The input type for the amplifyFluxPulse function.
 * - AmplifyFluxPulseOutput - The return type for the amplifyFluxPulse function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const AmplifyFluxPulseInputSchema = z.object({
  artistId: z.string().describe('The ID of the artist.'),
  fluxSignatureId: z.string().describe('The ID of the flux signature to amplify.'),
  crystallineBloomId: z.string().optional().describe('The ID of the crystalline bloom to amplify, if any.'),
  promotionGoal: z.string().describe('The goal of the promotion (e.g., increase followers, promote a specific artwork).'),
});
export type AmplifyFluxPulseInput = z.infer<typeof AmplifyFluxPulseInputSchema>;

const AmplifyFluxPulseOutputSchema = z.object({
  suggestedStrategies: z.array(
    z.string().describe('A list of suggested strategies to amplify the flux pulse.')
  ),
  predictedImpact: z.string().describe('The predicted impact of the suggested strategies.'),
});
export type AmplifyFluxPulseOutput = z.infer<typeof AmplifyFluxPulseOutputSchema>;

export async function amplifyFluxPulse(input: AmplifyFluxPulseInput): Promise<AmplifyFluxPulseOutput> {
  return amplifyFluxPulseFlow(input);
}

const prompt = ai.definePrompt({
  name: 'amplifyFluxPulsePrompt',
  input: {schema: AmplifyFluxPulseInputSchema},
  output: {schema: AmplifyFluxPulseOutputSchema},
  prompt: `You are an AI marketing assistant for artists. Your goal is to help artists amplify their flux pulse to promote their work more effectively.

  The artist has the following promotion goal: {{promotionGoal}}

  Suggest strategies to amplify the flux pulse for the artist with ID {{artistId}} and flux signature ID {{fluxSignatureId}}.
  If a crystalline bloom ID is provided, also suggest strategies to amplify the flux pulse for the crystalline bloom with ID {{crystallineBloomId}}.

  Return a list of suggested strategies and the predicted impact of those strategies.
  `,
});

const amplifyFluxPulseFlow = ai.defineFlow(
  {
    name: 'amplifyFluxPulseFlow',
    inputSchema: AmplifyFluxPulseInputSchema,
    outputSchema: AmplifyFluxPulseOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
